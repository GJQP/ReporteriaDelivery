CREATE OR REPLACE TYPE MARCA AS OBJECT(
    nombre VARCHAR2(80),
    rif VARCHAR2(11),
    fecha_de_registro DATE,
    --logo BLOB,
    STATIC FUNCTION VALIDAR_RIF(rif VARCHAR2) RETURN VARCHAR2
);
/
CREATE OR REPLACE TYPE BODY MARCA IS
    STATIC FUNCTION VALIDAR_RIF(rif VARCHAR2) RETURN VARCHAR2 IS
    BEGIN
        IF True THEN
            RETURN rif;
        ELSE
            RAISE_APPLICATION_ERROR(-20001,'Error: El rif no es vÃ¡lido');
        END IF;
    END;
END;
/
-- INICIO CREATE TABLE
CREATE TABLE aplicaciones_delivery (
    id NUMBER(15) GENERATED BY DEFAULT AS IDENTITY,
    app MARCA,
    PRIMARY KEY (id)
);
/
CREATE TABLE garajes(
    id_app NUMBER(15),
    id NUMBER(15) GENERATED BY DEFAULT AS IDENTITY,
    --ubicacion cooredenada NOT NULL
    PRIMARY KEY(id_app,id),
    CONSTRAINT garaje_app_fk FOREIGN KEY (id_app) REFERENCES aplicaciones_delivery(id)
);
/
CREATE TABLE tipos_de_unidad (
    id NUMBER(15) GENERATED BY DEFAULT AS IDENTITY,
    nombre VARCHAR2(40) NOT NULL CHECK ( nombre in  ('CAMIONETA','BICICLETA','MOTO','CARRO','DRONE')),
    distancia_operativa VARCHAR2(12) NOT NULL CHECK (distancia_operativa in  ('ZONA','MUNICIPIO','ESTADO')),
    velocidad_media NUMBER(5,2) NOT NULL,
    cantidad_pedidos_maximo NUMBER(3) NOT NULL,
    PRIMARY KEY(id)
);
/
CREATE TABLE unidades_transporte(
    id_app NUMBER(15),
    id_garaje NUMBER(15),
    id NUMBER(15) GENERATED BY DEFAULT AS IDENTITY,
    estado VARCHAR2(12) NOT NULL CHECK ( estado in  ('OPERATIVA','REPARACION','DESCONTINUADA')),
    id_tipo NUMBER(15),
    CONSTRAINT unidades_transporte_garaje_fk FOREIGN KEY (id_app, id_garaje) REFERENCES garajes(id_app, id),
    CONSTRAINT unidades_transporte_tipo_fk FOREIGN KEY (id_tipo) REFERENCES tipos_de_unidad(id),
    PRIMARY KEY (id_app,id_garaje,id)
);
/
CREATE TABLE log_update_unidades_transporte (
    id NUMBER(15) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_app NUMBER(15) NOT NULL,
    id_garaje NUMBER(15) NOT NULL,
    id_tipo NUMBER(15) NOT NULL
);
-- FIN CREATE TABLE
/
-- INICIO INSERTS
INSERT INTO aplicaciones_delivery VALUES(DEFAULT, marca('Traetelo', 'J-21323', TO_DATE('2020/09/01', 'yyyy/mm/dd')));
INSERT INTO aplicaciones_delivery VALUES(DEFAULT, marca('Ubiigo','J-5678', TO_DATE('2020/09/01', 'yyyy/mm/dd')));
INSERT INTO aplicaciones_delivery VALUES(DEFAULT, marca('Yummy','J-91011',TO_DATE('2020/09/01', 'yyyy/mm/dd')));
INSERT INTO aplicaciones_delivery VALUES(DEFAULT, marca('PedidosToGo','J-121114',TO_DATE('2020/09/01', 'yyyy/mm/dd')));

INSERT INTO garajes VALUES(1,DEFAULT);
INSERT INTO garajes VALUES(1,DEFAULT);
INSERT INTO garajes VALUES(2,DEFAULT);
INSERT INTO garajes VALUES(3,DEFAULT);
INSERT INTO garajes VALUES(4,DEFAULT);

INSERT INTO tipos_de_unidad VALUES(DEFAULT, 'CAMIONETA', 'ESTADO', 70, 10);
INSERT INTO tipos_de_unidad VALUES(DEFAULT, 'CARRO', 'ESTADO', 70, 3);
INSERT INTO tipos_de_unidad VALUES(DEFAULT, 'MOTO', 'MUNICIPIO', 50, 1);
INSERT INTO tipos_de_unidad VALUES(DEFAULT, 'DRONE', 'ZONA', 50, 1);
INSERT INTO tipos_de_unidad VALUES(DEFAULT, 'BICICLETA', 'ZONA', 20, 1);

INSERT INTO unidades_transporte VALUES(1,1, DEFAULT,  'OPERATIVA', 1);
INSERT INTO unidades_transporte VALUES(1,1, DEFAULT,  'OPERATIVA', 1);
INSERT INTO unidades_transporte VALUES(1,1, DEFAULT,  'OPERATIVA', 1);
INSERT INTO unidades_transporte VALUES(1,1, DEFAULT,  'OPERATIVA', 1);
INSERT INTO unidades_transporte VALUES(1,2, DEFAULT,  'OPERATIVA', 1);
INSERT INTO unidades_transporte VALUES(1,2, DEFAULT,  'OPERATIVA', 4);
INSERT INTO unidades_transporte VALUES(1,2, DEFAULT,  'OPERATIVA', 1);
INSERT INTO unidades_transporte VALUES(2,3, DEFAULT,  'OPERATIVA', 1);
INSERT INTO unidades_transporte VALUES(2,3, DEFAULT,  'OPERATIVA', 1);
INSERT INTO unidades_transporte VALUES(3,4, DEFAULT,  'OPERATIVA', 3);
INSERT INTO unidades_transporte VALUES(3,4, DEFAULT,  'OPERATIVA', 4);
INSERT INTO unidades_transporte VALUES(4,5, DEFAULT,  'OPERATIVA', 1);
INSERT INTO unidades_transporte VALUES(4,5, DEFAULT,  'OPERATIVA', 4);
INSERT INTO unidades_transporte VALUES(4,5, DEFAULT,  'OPERATIVA', 1);
-- FIN INSERTS
/
CREATE OR REPLACE TRIGGER registro_mantenimiento
AFTER UPDATE of estado on unidades_transporte
FOR EACH ROW
    BEGIN
        INSERT INTO log_update_unidades_transporte VALUES(DEFAULT, :new.id_app, :new.id_garaje, :new.id_tipo);
    END;
/
CREATE OR REPLACE TRIGGER reposicion_unidades
AFTER UPDATE of estado on unidades_transporte
    DECLARE
        cur SYS_REFCURSOR;
        total_unid NUMBER;
        total_rep NUMBER;
        i NUMBER;
    BEGIN
        FOR cur IN (SELECT * FROM log_update_unidades_transporte)
        LOOP
            SELECT COUNT(*) INTO total_unid FROM unidades_transporte WHERE id_app = cur.id_app AND id_garaje = cur.id_garaje AND id_tipo =  cur.id_tipo;
            SELECT COUNT(*) INTO total_rep FROM unidades_transporte WHERE id_app = cur.id_app AND id_garaje = cur.id_garaje AND id_tipo =  cur.id_tipo AND estado = 'REPARACION';
            IF (total_rep / total_unid >= 0.3) THEN
                FOR i IN 1..total_unid
                LOOP
                   DBMS_OUTPUT.PUT_LINE(i ||' debido a la unidad ' || cur.id || ' del garaje ' || cur.id_garaje || ' de la app ' || cur.id_app);
                   INSERT INTO unidades_transporte VALUES(cur.id_app, cur.id_garaje, DEFAULT, 'OPERATIVA', cur.id_tipo);
                   total_unid := total_unid + 1;
                   EXIT WHEN (total_rep / total_unid < 0.3);
                END LOOP;
            ELSE
                DBMS_OUTPUT.PUT_LINE('Todo en orden');
            END IF;
        END LOOP;
        DELETE FROM log_update_unidades_transporte WHERE 1=1;
    END;
/

SELECT ut.id, ut.estado, app.id AS "APP ID", app.app.nombre AS "Nombre",ti.nombre AS "Tipo de Unidad", ga.id AS "Garaje ID" 
FROM unidades_transporte ut, aplicaciones_delivery app, tipos_de_unidad ti, garajes ga 
WHERE app.id = ut.id_app AND ti.id = ut.id_tipo AND ga.id = ut.id_garaje;
/
UPDATE unidades_transporte SET estado = 'REPARACION' WHERE id = 1;
SELECT * FROM unidades_transporte WHERE id_app = 1 and id_garaje = 1; 
/
UPDATE unidades_transporte SET estado = 'REPARACION' WHERE id = 2;
SELECT * FROM unidades_transporte WHERE id_app = 1 and id_garaje = 1;
/
DROP TABLE log_update_unidades_transporte;
DROP TABLE unidades_transporte;
DROP TABLE tipos_de_unidad;
DROP TABLE garajes;
DROP TABLE aplicaciones_delivery;

DROP TYPE MARCA;
/
