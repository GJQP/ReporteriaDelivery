CREATE TABLE aplicaciones_delivery(
    id NUMBER PRIMARY KEY,
    --marca
    nombre VARCHAR2(30) NOT NULL UNIQUE,
    RIF VARCHAR2(10) NOT NULL
);
/

CREATE TABLE usuarios(
    id NUMBER PRIMARY KEY,
    --persona
    --fecha_de_registros
    id_app NUMBER NOT NULL,

    CONSTRAINT fk_aplicaciones_delivery FOREIGN KEY (id_app) REFERENCES aplicaciones_delivery(id)
);
/

CREATE TABLE zonas(
    id NUMBER PRIMARY KEY,
    nombre VARCHAR2(30) NOT NULL

);
/

CREATE TABLE direcciones(
    id NUMBER PRIMARY KEY,
    --descripcion
    --ubicacion
    --referencia
    id_usuario NUMBER NOT NULL,
    id_zona NUMBER NOT NULL,

    CONSTRAINT fk_usuarios FOREIGN KEY (id_usuario) REFERENCES usuarios(id),
    CONSTRAINT fk_zonas FOREIGN KEY (id_zona) REFERENCES zonas(id)
);
/

CREATE TABLE pedidos(
    tracking NUMBER PRIMARY KEY,
    fechas rango_tiempo NOT NULL,
    precio_total NUMBER(10,2) NOT NULL,
    --cancelado
    --valoracion
    id_direccion NUMBER NOT NULL,

    CONSTRAINT fk_direcciones FOREIGN KEY (id_direccion) REFERENCES direcciones(id)
);
/
CREATE TABLE garajes(
    id_app NUMBER(15),
    id NUMBER(15) GENERATED BY DEFAULT AS IDENTITY,
    --ubicacion cooredenada NOT NULL
    PRIMARY KEY(id_app,id),
    CONSTRAINT garaje_app_fk FOREIGN KEY (id_app) REFERENCES aplicaciones_delivery(id)
);
/

CREATE TABLE tipos_de_unidad (
    id NUMBER(15) GENERATED BY DEFAULT AS IDENTITY,
    nombre VARCHAR2(40) NOT NULL CHECK ( nombre in  ('CAMIONETA','BICICLETA','MOTO','CARRO','DRONE')),
    distancia_operativa VARCHAR2(12) NOT NULL CHECK (distancia_operativa in  ('ZONA','MUNICIPIO','ESTADO')),
    velocidad_media NUMBER(5,2) NOT NULL,
    cantidad_pedidos_maximo NUMBER(3) NOT NULL,
    PRIMARY KEY(id)
);
/

CREATE TABLE unidades_transporte(
    id_app NUMBER(15),
    id_garaje NUMBER(15),
    id NUMBER(15) GENERATED BY DEFAULT AS IDENTITY,
    estado VARCHAR2(12) NOT NULL CHECK ( estado in  ('OPERATIVA','REPARACION','DESCONTINUADA')),
    id_tipo NUMBER(15),
    CONSTRAINT unidades_transporte_garaje_fk FOREIGN KEY (id_app, id_garaje) REFERENCES garajes(id_app, id),
    CONSTRAINT unidades_transporte_tipo_fk FOREIGN KEY (id_tipo) REFERENCES tipos_de_unidad(id),
    PRIMARY KEY (id_app,id_garaje,id)
);
/