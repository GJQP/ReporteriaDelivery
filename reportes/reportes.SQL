CREATE OR REPLACE PROCEDURE reporte1(test_cur OUT sys_refcursor) IS
BEGIN
    OPEN test_cur FOR
    SELECT
        TREAT(APLICACIONES_DELIVERY.app AS MARCA).LOGO as LOGO,
        TREAT(APLICACIONES_DELIVERY.app AS MARCA).NOMBRE as NOMBRE,
        PLANES_DE_SERVICIO.cantidad_envios,
        PLANES_DE_SERVICIO.modalidad,
        TREAT(PLANES_DE_SERVICIO.duracion AS RANGO_TIEMPO).FECHA_INICIO AS FECHA_INICIO,
        TREAT(PLANES_DE_SERVICIO.DURACION AS RANGO_TIEMPO).FECHA_FIN AS FECHA_FIN,
        PLANES_DE_SERVICIO.precio
    FROM
         PLANES_DE_SERVICIO
    INNER JOIN
        APLICACIONES_DELIVERY
    ON
        PLANES_DE_SERVICIO.ID_APP = APLICACIONES_DELIVERY.ID AND PLANES_DE_SERVICIO.CANCELADO IS NULL
    ORDER BY NOMBRE;
END;

CREATE OR REPLACE PROCEDURE reporte4 (test_cur OUT sys_refcursor, estado VARCHAR2 DEFAULT NULL) IS
BEGIN

    IF (estado IS NULL ) THEN
        OPEN test_cur FOR
        SELECT S.*, TREAT(EX.APP AS MARCA).LOGO LOGO_APP
        FROM
        (
        SELECT
            AD.ID APPI,
            TREAT(AD.APP AS MARCA).NOMBRE NOMBRE_APP,
            E.NOMBRE NOMBRE_ESTADO,
            TDU.NOMBRE NOMBRE_TIPO,
            SUM(DECODE(udt.estado,'OPERATIVA',1,0)) AS UNIDADES_OP,
            SUM(DECODE(udt.estado,'REPARACION',1,0)) AS UNIDADES_REP
        FROM
            GARAJES
        INNER JOIN
            APLICACIONES_DELIVERY AD ON AD.ID = GARAJES.ID_APP
        INNER JOIN
            UNIDADES_DE_TRANSPORTE UDT ON GARAJES.ID_APP = UDT.ID_APP and GARAJES.ID = UDT.ID_GARAJE
        INNER JOIN
            TIPOS_DE_UNIDADES TDU ON UDT.ID_TIPO = TDU.ID
        INNER JOIN
            ESTADOS E ON GARAJES.ID_ESTADO = E.ID
        GROUP BY
            TREAT(AD.APP AS MARCA).NOMBRE,
            E.NOMBRE,
            TDU.NOMBRE,
            AD.ID
        ORDER BY
            TREAT(AD.APP AS MARCA).NOMBRE,
            E.NOMBRE,
            TDU.NOMBRE
        ) S
        INNER JOIN
            APLICACIONES_DELIVERY EX ON EX.ID = S.APPI;
    ELSE
        OPEN test_cur FOR
        SELECT S.*, TREAT(EX.APP AS MARCA).LOGO LOGO_APP
        FROM
        (
        SELECT
            AD.ID APPI,
            TREAT(AD.APP AS MARCA).NOMBRE NOMBRE_APP,
            E.NOMBRE NOMBRE_ESTADO,
            TDU.NOMBRE NOMBRE_TIPO,
            SUM(DECODE(udt.estado,'OPERATIVA',1,0)) AS UNIDADES_OP,
            SUM(DECODE(udt.estado,'REPARACION',1,0)) AS UNIDADES_REP
        FROM
            GARAJES
        INNER JOIN
            APLICACIONES_DELIVERY AD ON AD.ID = GARAJES.ID_APP
        INNER JOIN
            UNIDADES_DE_TRANSPORTE UDT ON GARAJES.ID_APP = UDT.ID_APP and GARAJES.ID = UDT.ID_GARAJE
        INNER JOIN
            TIPOS_DE_UNIDADES TDU ON UDT.ID_TIPO = TDU.ID
        INNER JOIN
            ESTADOS E ON GARAJES.ID_ESTADO = E.ID
        GROUP BY
            TREAT(AD.APP AS MARCA).NOMBRE,
            E.NOMBRE,
            TDU.NOMBRE,
            AD.ID
        ORDER BY
            TREAT(AD.APP AS MARCA).NOMBRE,
            E.NOMBRE,
            TDU.NOMBRE
        ) S
        INNER JOIN
            APLICACIONES_DELIVERY EX ON EX.ID = S.APPI;
    END IF;
END;

CREATE OR REPLACE PROCEDURE reporte6 (test_cur OUT sys_refcursor, p_estado VARCHAR2 DEFAULT NULL, p_fecha_registro DATE DEFAULT NULL) IS
BEGIN
    IF (p_estado IS NULL AND p_fecha_registro IS NULL) THEN
        OPEN test_cur FOR
        SELECT
            USUARIOS.FOTO,
            USUARIOS.PRIMER_NOMBRE,
            USUARIOS.SEGUNDO_NOMBRE,
            USUARIOS.PRIMER_APELLIDO,
            USUARIOS.SEGUNDO_APELLIDO,
            USUARIOS.TIPO_DE_CEDULA,
            USUARIOS.NUMERO_DE_CEDULA,
            TREAT(USUARIOS.ESTADO AS RANGO_TIEMPO) FECHA_NACIMIENTO,
            USUARIOS.EMAIL,
            TREAT(R.REGISTRO AS RANGO_TIEMPO).FECHA_INICIO,
            TREAT(AD.APP AS MARCA).NOMBRE NOMBRE_APP,
            TREAT(AD.APP AS MARCA).LOGO LOGO_APP,
            D.DESCRIPCION,
            E.NOMBRE
        FROM
            USUARIOS
        INNER JOIN
            REGISTROS R ON USUARIOS.ID = R.ID_USUARIO
        INNER JOIN
            APLICACIONES_DELIVERY AD ON R.ID_APP = AD.ID
        INNER JOIN
            DIRECCIONES D ON USUARIOS.ID = D.ID_USUARIO
        INNER JOIN
            ESTADOS E ON E.ID = D.ID_ESTADO
        WHERE
            R.REGISTRO.FECHA_FIN IS NULL;
    ELSIF(p_estado IS NOT NULL AND p_fecha_registro IS NULL) THEN
        OPEN test_cur FOR
        SELECT
            USUARIOS.FOTO,
            USUARIOS.PRIMER_NOMBRE,
            USUARIOS.SEGUNDO_NOMBRE,
            USUARIOS.PRIMER_APELLIDO,
            USUARIOS.SEGUNDO_APELLIDO,
            USUARIOS.TIPO_DE_CEDULA,
            USUARIOS.NUMERO_DE_CEDULA,
            TREAT(USUARIOS.ESTADO AS RANGO_TIEMPO) FECHA_NACIMIENTO,
            USUARIOS.EMAIL,
            TREAT(R.REGISTRO AS RANGO_TIEMPO).FECHA_INICIO,
            TREAT(AD.APP AS MARCA).NOMBRE NOMBRE_APP,
            TREAT(AD.APP AS MARCA).LOGO LOGO_APP,
            D.DESCRIPCION,
            E.NOMBRE
        FROM
            USUARIOS
        INNER JOIN
            REGISTROS R ON USUARIOS.ID = R.ID_USUARIO
        INNER JOIN
            APLICACIONES_DELIVERY AD ON R.ID_APP = AD.ID
        INNER JOIN
            DIRECCIONES D ON USUARIOS.ID = D.ID_USUARIO
        INNER JOIN
            ESTADOS E ON E.ID = D.ID_ESTADO
        WHERE
            R.REGISTRO.FECHA_FIN IS NULL AND p_estado = E.NOMBRE;
    ELSIF (p_estado IS NULL AND p_fecha_registro IS NOT NULL) THEN
        OPEN test_cur FOR
        SELECT
            USUARIOS.FOTO,
            USUARIOS.PRIMER_NOMBRE,
            USUARIOS.SEGUNDO_NOMBRE,
            USUARIOS.PRIMER_APELLIDO,
            USUARIOS.SEGUNDO_APELLIDO,
            USUARIOS.TIPO_DE_CEDULA,
            USUARIOS.NUMERO_DE_CEDULA,
            TREAT(USUARIOS.ESTADO AS RANGO_TIEMPO) FECHA_NACIMIENTO,
            USUARIOS.EMAIL,
            TREAT(R.REGISTRO AS RANGO_TIEMPO).FECHA_INICIO,
            TREAT(AD.APP AS MARCA).NOMBRE NOMBRE_APP,
            TREAT(AD.APP AS MARCA).LOGO LOGO_APP,
            D.DESCRIPCION,
            E.NOMBRE
        FROM
            USUARIOS
        INNER JOIN
            REGISTROS R ON USUARIOS.ID = R.ID_USUARIO
        INNER JOIN
            APLICACIONES_DELIVERY AD ON R.ID_APP = AD.ID
        INNER JOIN
            DIRECCIONES D ON USUARIOS.ID = D.ID_USUARIO
        INNER JOIN
            ESTADOS E ON E.ID = D.ID_ESTADO
        WHERE
            R.REGISTRO.FECHA_FIN IS NULL AND R.REGISTRO.FECHA_INICIO >= p_fecha_registro;
    ELSE
        OPEN test_cur FOR
        SELECT
            USUARIOS.FOTO,
            USUARIOS.PRIMER_NOMBRE,
            USUARIOS.SEGUNDO_NOMBRE,
            USUARIOS.PRIMER_APELLIDO,
            USUARIOS.SEGUNDO_APELLIDO,
            USUARIOS.TIPO_DE_CEDULA,
            USUARIOS.NUMERO_DE_CEDULA,
            TREAT(USUARIOS.ESTADO AS RANGO_TIEMPO) FECHA_NACIMIENTO,
            USUARIOS.EMAIL,
            TREAT(R.REGISTRO AS RANGO_TIEMPO).FECHA_INICIO,
            TREAT(AD.APP AS MARCA).NOMBRE NOMBRE_APP,
            TREAT(AD.APP AS MARCA).LOGO LOGO_APP,
            D.DESCRIPCION,
            E.NOMBRE
        FROM
            USUARIOS
        INNER JOIN
            REGISTROS R ON USUARIOS.ID = R.ID_USUARIO
        INNER JOIN
            APLICACIONES_DELIVERY AD ON R.ID_APP = AD.ID
        INNER JOIN
            DIRECCIONES D ON USUARIOS.ID = D.ID_USUARIO
        INNER JOIN
            ESTADOS E ON E.ID = D.ID_ESTADO
        WHERE
            R.REGISTRO.FECHA_FIN IS NULL AND p_estado = E.NOMBRE AND R.REGISTRO.FECHA_INICIO >= p_fecha_registro;
    END IF;
END;




