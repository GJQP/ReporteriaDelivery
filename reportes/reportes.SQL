CREATE OR REPLACE PROCEDURE reporte1(test_cur OUT sys_refcursor) IS
BEGIN
    OPEN test_cur FOR
    SELECT
        TREAT(APLICACIONES_DELIVERY.app AS MARCA).LOGO as LOGO,
        TREAT(APLICACIONES_DELIVERY.app AS MARCA).NOMBRE as NOMBRE,
        PLANES_DE_SERVICIO.cantidad_envios,
        PLANES_DE_SERVICIO.modalidad,
        TREAT(PLANES_DE_SERVICIO.duracion AS RANGO_TIEMPO).FECHA_INICIO AS FECHA_INICIO,
        TREAT(PLANES_DE_SERVICIO.DURACION AS RANGO_TIEMPO).FECHA_FIN AS FECHA_FIN,
        PLANES_DE_SERVICIO.precio
    FROM
         PLANES_DE_SERVICIO
    INNER JOIN
        APLICACIONES_DELIVERY
    ON
        PLANES_DE_SERVICIO.ID_APP = APLICACIONES_DELIVERY.ID AND PLANES_DE_SERVICIO.CANCELADO IS NULL
    ORDER BY NOMBRE;
END;

CREATE OR REPLACE PROCEDURE reporte2(test_cur OUT sys_refcursor, p_estado VARCHAR2 DEFAULT NULL) IS
BEGIN
    IF(p_estado IS NULL) THEN
        OPEN test_cur FOR
        SELECT
        S.*,
        (SELECT
            MIN(TREAT(CS.DURACION AS RANGO_TIEMPO).FECHA_INICIO) FECHA_REG
        FROM
            CONTRATOS CS
        WHERE
            S.EMPRESA = CS.ID_EMPRESA
        ) FECHA_REGISTRO,
        TREAT(EP.EMPRESA AS MARCA).LOGO AS LOGO
        FROM (
             SELECT
                C2.ID_EMPRESA EMPRESA,
                TREAT(AD.APP AS MARCA).NOMBRE NOMBRE_APP,
                TREAT(PS.DURACION AS RANGO_TIEMPO).FECHA_INICIO AS FECHA_INICIO,
                TREAT(PS.DURACION AS RANGO_TIEMPO).FECHA_FIN AS FECHA_FIN,
                LISTAGG(E.NOMBRE,', ') WITHIN GROUP (ORDER BY E.NOMBRE) AS ESTADOS,
                C2.PORCENTAJE_DESCUENTO DESCUENTO,
                PS.MODALIDAD MODALIDAD,
                PS.CANTIDAD_ENVIOS CANTIDAD_ENVIOS,
                PS.PRECIO PRECIO
             FROM
                 PLANES_DE_SERVICIO PS
             INNER JOIN
                 APLICACIONES_DELIVERY AD ON AD.ID = PS.ID_APP
             INNER JOIN
                 UBICACIONES_APLICABLES UA ON PS.ID_APP = UA.ID_APP AND PS.ID = UA.ID_PLAN
             INNER JOIN
                 ESTADOS E ON UA.ID_ESTADO = E.ID
             INNER JOIN
                 CONTRATOS C2 ON C2.CANCELADO IS NULL AND PS.ID_APP = C2.ID_APP AND PS.ID = C2.ID_PLAN
             WHERE
                 PS.DURACION.FECHA_FIN IS NULL AND PS.CANCELADO IS NULL AND (E.NOMBRE = p_estado OR p_estado IS NULL)
             GROUP BY
                 TREAT(AD.APP AS MARCA).NOMBRE,
                 TREAT(PS.DURACION AS RANGO_TIEMPO).FECHA_FIN,
                 TREAT(PS.DURACION AS RANGO_TIEMPO).FECHA_INICIO,
                 C2.ID_EMPRESA,
                 C2.PORCENTAJE_DESCUENTO,
                 PS.MODALIDAD,
                 PS.CANTIDAD_ENVIOS,
                 PS.PRECIO
             ORDER BY
                 C2.ID_EMPRESA,
                 TREAT(PS.DURACION AS RANGO_TIEMPO).FECHA_FIN
             ) S
        INNER JOIN
            EMPRESAS EP ON S.EMPRESA = EP.ID;
    END IF;
END;

CREATE OR REPLACE PROCEDURE reporte3 (test_cur OUT sys_refcursor, sector VARCHAR2 DEFAULT NULL, fecha_ini DATE DEFAULT NULL, fecha_fin DATE DEFAULT NULL) IS
BEGIN

    OPEN test_cur FOR
    SELECT S.*,
        TREAT(AP.APP AS MARCA).LOGO LOGO_APP,
        TREAT(EP.EMPRESA AS MARCA).LOGO LOGO_EMPRESA
        FROM
            (
                SELECT
                PD.ID_APP IDAPP,
                PD.ID_EMPRESA IDEMPRESA,
                TREAT(EP.EMPRESA AS MARCA).NOMBRE NOMBRE_EMP,
                TREAT(AD.APP AS MARCA).NOMBRE NOMBRE_APP,
                SDC.NOMBRE,
                COUNT(PD.TRACKING) AS CANTIDAD_PEDIDOS,
                TREAT(PD.DURACION AS RANGO_TIEMPO).FECHA_INICIO FI,
                TREAT(PD.DURACION AS RANGO_TIEMPO).FECHA_FIN FF
            FROM
                PEDIDOS PD
            INNER JOIN
                EMPRESAS EP ON EP.ID = PD.ID_EMPRESA
            INNER JOIN
                APLICACIONES_DELIVERY AD ON AD.ID = PD.ID_APP
            INNER JOIN
                DETALLES D ON PD.TRACKING = D.ID_TRACKING
            INNER JOIN
                ESTADOS E ON E.ID = PD.ID_ESTADO
            INNER JOIN
                SECTORES_DE_COMERCIO SDC ON SDC.ID = EP.id_sector
            WHERE
                  PD.CANCELADO IS NULL AND
                  (TREAT(PD.DURACION AS RANGO_TIEMPO).FECHA_INICIO >= fecha_ini OR fecha_ini IS NULL) AND
                  (TREAT(PD.DURACION AS RANGO_TIEMPO).FECHA_FIN <= fecha_fin OR fecha_fin IS NULL) AND
                  (sector IS NULL OR SDC.NOMBRE = sector)
            GROUP BY
                    PD.ID_APP,
                    PD.ID_EMPRESA,
                    TREAT(EP.EMPRESA AS MARCA).NOMBRE,
                    TREAT(AD.APP AS MARCA).NOMBRE,
                    SDC.NOMBRE,
                    E.NOMBRE,
                    TREAT(PD.DURACION AS RANGO_TIEMPO).FECHA_INICIO,
                    TREAT(PD.DURACION AS RANGO_TIEMPO).FECHA_FIN
            ORDER BY
                    PD.ID_EMPRESA,
                    PD.ID_APP,
                    E.NOMBRE,
                    TREAT(PD.DURACION AS RANGO_TIEMPO).FECHA_INICIO
            ) S
        INNER JOIN
            EMPRESAS EP ON EP.ID = S.IDEMPRESA
        INNER JOIN
            APLICACIONES_DELIVERY AP ON AP.ID = S.IDAPP;
END;

CREATE OR REPLACE PROCEDURE reporte4 (test_cur OUT sys_refcursor, p_estado VARCHAR2 DEFAULT NULL) IS
BEGIN
    OPEN test_cur FOR
    SELECT S.*, TREAT(EX.APP AS MARCA).LOGO LOGO_APP
    FROM
    (
    SELECT
        AD.ID APPI,
        TREAT(AD.APP AS MARCA).NOMBRE NOMBRE_APP,
        E.NOMBRE NOMBRE_ESTADO,
        TDU.NOMBRE NOMBRE_TIPO,
        SUM(DECODE(udt.estado,'OPERATIVA',1,0)) AS UNIDADES_OP,
        SUM(DECODE(udt.estado,'REPARACION',1,0)) AS UNIDADES_REP
    FROM
        GARAJES
    INNER JOIN
        APLICACIONES_DELIVERY AD ON AD.ID = GARAJES.ID_APP
    INNER JOIN
        UNIDADES_DE_TRANSPORTE UDT ON GARAJES.ID_APP = UDT.ID_APP and GARAJES.ID = UDT.ID_GARAJE
    INNER JOIN
        TIPOS_DE_UNIDADES TDU ON UDT.ID_TIPO = TDU.ID
    INNER JOIN
        ESTADOS E ON GARAJES.ID_ESTADO = E.ID
    GROUP BY
        TREAT(AD.APP AS MARCA).NOMBRE,
        E.NOMBRE,
        TDU.NOMBRE,
        AD.ID
    ORDER BY
        TREAT(AD.APP AS MARCA).NOMBRE,
        E.NOMBRE,
        TDU.NOMBRE
    ) S
    INNER JOIN
        APLICACIONES_DELIVERY EX ON EX.ID = S.APPI AND (p_estado IS NULL OR S.NOMBRE_ESTADO = p_estado);
END;

CREATE OR REPLACE PROCEDURE reporte6 (test_cur OUT sys_refcursor, p_estado VARCHAR2 DEFAULT NULL, p_fecha_registro DATE DEFAULT NULL) IS
BEGIN
    OPEN test_cur FOR
    SELECT
        USUARIOS.FOTO,
        USUARIOS.PRIMER_NOMBRE,
        USUARIOS.SEGUNDO_NOMBRE,
        USUARIOS.PRIMER_APELLIDO,
        USUARIOS.SEGUNDO_APELLIDO,
        USUARIOS.TIPO_DE_CEDULA,
        USUARIOS.NUMERO_DE_CEDULA,
        TREAT(USUARIOS.ESTADO AS RANGO_TIEMPO) FECHA_NACIMIENTO,
        USUARIOS.EMAIL,
        TREAT(R.REGISTRO AS RANGO_TIEMPO).FECHA_INICIO,
        TREAT(AD.APP AS MARCA).NOMBRE NOMBRE_APP,
        TREAT(AD.APP AS MARCA).LOGO LOGO_APP,
        D.DESCRIPCION,
        E.NOMBRE
    FROM
        USUARIOS
    INNER JOIN
        REGISTROS R ON USUARIOS.ID = R.ID_USUARIO
    INNER JOIN
        APLICACIONES_DELIVERY AD ON R.ID_APP = AD.ID
    INNER JOIN
        DIRECCIONES D ON USUARIOS.ID = D.ID_USUARIO
    INNER JOIN
        ESTADOS E ON E.ID = D.ID_ESTADO
    WHERE
        R.REGISTRO.FECHA_FIN IS NULL AND (p_estado IS NULL OR E.NOMBRE = p_estado) AND (p_fecha_registro IS NULL OR TREAT(R.REGISTRO AS RANGO_TIEMPO).FECHA_INICIO >= p_fecha_registro);
END;




