CREATE OR REPLACE PROCEDURE reporte1(test_cur OUT sys_refcursor) IS
BEGIN
OPEN test_cur FOR
    SELECT
        TREAT(APLICACIONES_DELIVERY.app AS MARCA).LOGO as LOGO,
        TREAT(APLICACIONES_DELIVERY.app AS MARCA).NOMBRE as NOMBRE,
        PLANES_DE_SERVICIO.cantidad_envios,
        PLANES_DE_SERVICIO.modalidad,
        TREAT(PLANES_DE_SERVICIO.duracion AS RANGO_TIEMPO).FECHA_INICIO AS FECHA_INICIO,
        TREAT(PLANES_DE_SERVICIO.DURACION AS RANGO_TIEMPO).FECHA_FIN AS FECHA_FIN,
        PLANES_DE_SERVICIO.precio
    FROM
         PLANES_DE_SERVICIO
    INNER JOIN
        APLICACIONES_DELIVERY
    ON
        PLANES_DE_SERVICIO.ID_APP = APLICACIONES_DELIVERY.ID AND PLANES_DE_SERVICIO.CANCELADO IS NULL
    ORDER BY NOMBRE;
END;

CREATE OR REPLACE PROCEDURE reporte4 (test_cur OUT sys_refcursor, estado VARCHAR2 DEFAULT NULL) IS
BEGIN
    SELECT *, TREAT(EX.APP AS MARCA).LOGO LOGO_APP FROM(
    SELECT
        AD.ID APPI,
        TREAT(AD.APP AS MARCA).NOMBRE NOMBRE_APP,
        E.NOMBRE NOMBRE_ESTADO,
        TDU.NOMBRE NOMBRE_TIPO,
        SUM(DECODE(udt.estado,'OPERATIVA',1,0)) AS UNIDADES_OP,
        SUM(DECODE(udt.estado,'REPARACION',1,0)) AS UNIDADES_REP
    FROM
        GARAJES
    INNER JOIN
        APLICACIONES_DELIVERY AD ON AD.ID = GARAJES.ID_APP
    INNER JOIN
        UNIDADES_DE_TRANSPORTE UDT ON GARAJES.ID_APP = UDT.ID_APP and GARAJES.ID = UDT.ID_GARAJE
    INNER JOIN
        TIPOS_DE_UNIDADES TDU ON UDT.ID_TIPO = TDU.ID
    INNER JOIN
        ESTADOS E ON GARAJES.ID_ESTADO = E.ID
    WHERE
        DECODE(estado, NULL, 1=1, E.NOMBRE)
    GROUP BY
        TREAT(AD.APP AS MARCA).NOMBRE,
        E.NOMBRE,
        TDU.NOMBRE,
        AD.ID
    ORDER BY
        TREAT(AD.APP AS MARCA).NOMBRE,
        E.NOMBRE,
        TDU.NOMBRE
    )
    INNER JOIN
        APLICACIONES_DELIVERY EX ON EX.ID = APPI;
END;
